package com.lsts.inspection.web;

import java.util.Date;
import java.util.HashMap;

import javax.servlet.http.HttpServletRequest;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.ResponseBody;

import com.khnt.core.crud.web.SpringSupportAction;
import com.khnt.core.crud.web.support.JsonWrapper;
import com.khnt.security.CurrentSessionUser;
import com.khnt.security.util.SecurityUtil;
import com.lsts.inspection.bean.ReportRecordParse;
import com.lsts.inspection.service.ReportRecordParseService;

/**
 * 移动端原始记录检验项目解析控制器
 * 
 * @ClassName ReportRecordParseAction
 * @JDK 1.7
 * @author GaoYa
 * @date 2016-06-27 上午11:20:00
 */
@Controller
@RequestMapping("report/record/parse")
public class ReportRecordParseAction extends
		SpringSupportAction<ReportRecordParse, ReportRecordParseService> {

	@Autowired
	private ReportRecordParseService reportRecordParseService;
	
	/**
	 * 保存
	 * 
	 * @param request
	 * @param reportRecordParse
	 * @throws Exception
	 */
	@RequestMapping(value = "saveBasic")
	@ResponseBody
	public HashMap<String, Object> saveBasic(HttpServletRequest request,
			ReportRecordParse reportRecordParse) throws Exception {
		CurrentSessionUser user = SecurityUtil.getSecurityUser();
		try {
			reportRecordParse.setData_status("0");	// 状态（0：启用 99：停用）
			reportRecordParse.setLast_mdy_uid(user.getId());
			reportRecordParse.setLast_mdy_uname(user.getName());
			reportRecordParse.setLast_mdy_date(new Date());
			reportRecordParseService.save(reportRecordParse);
		} catch (Exception e) {
			e.printStackTrace();
			return JsonWrapper.failureWrapperMsg("保存失败，请重试！");
		}
		return JsonWrapper.successWrapper(reportRecordParse);
	}

	// 删除移动端原始记录检验项目解析信息
	@RequestMapping(value = "del")
	@ResponseBody
	public HashMap<String, Object> del(HttpServletRequest request, String ids) throws Exception {
		reportRecordParseService.del(request, ids);
		return JsonWrapper.successWrapper(ids);
	}
	
}
